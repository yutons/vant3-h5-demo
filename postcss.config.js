// 该工具不能转换行内样式中的`px`
// PostCss配置文件
module.exports = {
    // 配置所需要的插件
    plugins: {
        //   配置使用postcss-pxtorem插件
        //作用把px转成rem
        "postcss-pxtorem": {
            //rootValue:根元素的值
            //我们这里使用的是lib-flexible的REM适配方案：它的原理是：把一行分为10份，每份就是10分之一，所以rootValue应该设置为你的设计稿宽度的十分之一
            //假如我们的设计稿是宽是750px，所以应该设置为75，大多数设计稿的原型都是以iphone6为原型，iphone6设备的宽度是750.
            //但是Vant建议设置为37.5，因为Vant是基于375写的。
            //所以这里的缺点就是使用咱们设计稿的尺寸都必须除以2（比较麻烦），如果我们这里直接指定75，那么使用vant样式的组件就会变的非常小
            //有没有更好的办法呢？
            // 我们想：如果是是Vant的样式，就按照37.5来转换，如果是我们自己的样式，就按照75来转换。
            // rootValue支持两种处理方式：一种是直接返回数字，另外就是函数，通过函数可以实现动态的处理。
            // postcss-pxtorem处理每个CSS文件的时候都会调用该方法，并且它会把处理的`css`文件的相关信息通过
            //参数传递给该函数。下面这里我们解构出来的就是文件路径的属性。看一下路径中是否包含vant,如果是就是处理vant的css，否则就是处理我们
            //自己的css
            rootValue({ file }) {
                return file.indexOf("vant") !== -1 ? 37.5 : 75;
            },
            //   rootValue: 37.5,
            // 配置要转换的css属性
            // *:表示所有，如果只想转换height属性，可以采用如下的写法：propList:['height']，我们大多的情况就是转换所有
            propList: ["*"],
        },
    },
};